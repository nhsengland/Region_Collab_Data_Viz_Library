knitr::opts_chunk$set(echo = TRUE)
if (!require("pacman")) install.packages("pacman"); library(pacman)
pacman::p_load(Rcpp, tidyverse,dplyr,tidyr,
ggplot2,ggthemes,ggtext,scales,
png,ggalt,NHSRdatasets,onsr,shinycssloaders, plotly, networkD3, FunnelPlotR)
# install.packages('devtools')
#devtools::install_github('nhs-r-community/NHSRtheme')
# install.packages("remotes")
remotes::install_github("rOpenSci/fingertipsR",
build_vignettes = TRUE,
dependencies = "suggests",
build = F)
devtools::install_github("ricardo-bion/ggradar")
#https://github.com/ricardo-bion/ggradar
#Load initial dataset and clean up
Attends_1 <- NHSRdatasets::ae_attendances
Attends_1$org_code <- as.character(Attends_1$org_code)
Attends <- Attends_1 %>%
filter(org_code == "RXQ"|org_code=="RTH"|org_code=="RHW"|
org_code == "RTK"|org_code == "RA2") %>%
filter(type ==1) %>%
select(-c(3,5))
#Filter initial dataset
multiple_line_rxq <- Attends %>%
filter(org_code == "RXQ") %>%
rename(attendrxq=attendances)
line_rth = subset(multiple_line_rth, select = -c(admissions, org_code))
line_rth = subset(multiple_line_rth, select = -c(admissions, org_code))
#Filter initial dataset for one trust
multiple_line_rxq <- Attends %>%
filter(org_code == "RXQ") %>%
rename(attendrxq=attendances)
#Filter initial dataset for another trust
multiple_line_rth <- Attends %>%
filter(org_code=="RTH") %>%
rename(attend_rth=attendances)
View(multiple_line_rxq)
#Filter initial dataset for one trust
multiple_line_rxq <- Attends %>%
filter(org_code == "RXQ") %>%
rename(attendrxq=attendances)
#Filter initial dataset for another trust
multiple_line_rth <- Attends %>%
filter(org_code=="RTH") %>%
rename(attend_rth=attendances)
# Remove a couple of colums from both dataframes
line_rth = subset(multiple_line_rth, select = -c(admissions, org_code))
line_rxq = subset(multiple_line_rxq, select = -c(admissions, org_code))
# Combine data frames
multiple_line_data <-
merge(line_rth, line_rxq)
# Create plotly chart
plot_ly(multiple_line_data, x = ~period, y = ~multiple_line_data$attend_rth, name = 'RTH', type = 'scatter', mode = 'lines',
line = list(color = 'rgb(118, 134)', width = 3, dash = 'dot'))  %>%
add_trace(y = ~multiple_line_data$attendrxq, name = 'RXQ', line = list(color = 'blue', width = 3, dash = 'solid'))%>%  ##Plot a second line in NHS blue
layout(title = 'Time Series Line Chart',                 ##set titles and axis labels
xaxis = list (title = "Year"),
yaxis = list (title = "Attendances")
) %>%
config(modeBarButtonsToRemove = c("zoomIn2d", "zoomOut2d", "select2d", "lasso2d", "toImage",   ##remove any unnecessary functions of plotly chart
"pan2d", "autoScale2d", "resetScale2d", "zoom2d"))
#Filter initial dataset for one trust
multiple_line_rxq <- Attends %>%
filter(org_code == "RXQ") %>%
rename(attendrxq=attendances)
#Filter initial dataset for another trust
multiple_line_rth <- Attends %>%
filter(org_code=="RTH") %>%
rename(attend_rth=attendances)
# Remove a couple of colums from both dataframes
line_rth = subset(multiple_line_rth, select = -c(admissions, org_code))
line_rxq = subset(multiple_line_rxq, select = -c(admissions, org_code))
# Combine data frames
multiple_line_data <-
merge(line_rth, line_rxq)
# Create plotly chart
plot_ly(multiple_line_data, x = ~period, y = ~multiple_line_data$attend_rth, name = 'RTH', type = 'scatter', mode = 'lines',
line = list(color = 'rgb(118, 134)', width = 3, dash = 'dot'))  %>%
add_trace(y = ~multiple_line_data$attendrxq, name = 'RXQ', line = list(color = 'blue', width = 3, dash = 'solid'))%>%  ##Plot a second line in NHS blue
layout(title = 'Time Series Line Chart',                 ##set titles and axis labels
xaxis = list (title = "Year"),
yaxis = list (title ="Attendances", range = c(0, max(line_df$attendances) * 1.1))) %>%  #Align the y axis scales with the ggplot chart
) %>%
#Filter initial dataset for one trust
multiple_line_rxq <- Attends %>%
filter(org_code == "RXQ") %>%
rename(attendrxq=attendances)
#Filter initial dataset for another trust
multiple_line_rth <- Attends %>%
filter(org_code=="RTH") %>%
rename(attend_rth=attendances)
# Remove a couple of colums from both dataframes
line_rth = subset(multiple_line_rth, select = -c(admissions, org_code))
line_rxq = subset(multiple_line_rxq, select = -c(admissions, org_code))
# Combine data frames
multiple_line_data <-
merge(line_rth, line_rxq)
# Create plotly chart
plot_ly(multiple_line_data, x = ~period, y = ~multiple_line_data$attend_rth, name = 'RTH', type = 'scatter', mode = 'lines',
line = list(color = 'rgb(118, 134)', width = 3, dash = 'dot'))  %>%
add_trace(y = ~multiple_line_data$attendrxq, name = 'RXQ', line = list(color = 'blue', width = 3, dash = 'solid'))%>%  ##Plot a second line in NHS blue
layout(title = 'Time Series Line Chart',                 ##set titles and axis labels
xaxis = list (title = "Year"),
yaxis = list (title ="Attendances", range = c(0, max(line_df$attendances) * 1.1))) %>%  #Align the y axis scales with the ggplot chart
config(modeBarButtonsToRemove = c("zoomIn2d", "zoomOut2d", "select2d", "lasso2d", "toImage",   ##remove any unnecessary functions of plotly chart
"pan2d", "autoScale2d", "resetScale2d", "zoom2d"))
View(multiple_line_data)
#Filter initial dataset for one trust
multiple_line_rxq <- Attends %>%
filter(org_code == "RXQ") %>%
rename(attendrxq=attendances)
#Filter initial dataset for another trust
multiple_line_rth <- Attends %>%
filter(org_code=="RTH") %>%
rename(attend_rth=attendances)
# Remove a couple of colums from both dataframes
line_rth = subset(multiple_line_rth, select = -c(admissions, org_code))
line_rxq = subset(multiple_line_rxq, select = -c(admissions, org_code))
# Combine data frames
multiple_line_data <-
merge(line_rth, line_rxq)
# Create plotly chart
plot_ly(multiple_line_data, x = ~period, y = ~multiple_line_data$attend_rth, name = 'RTH', type = 'scatter', mode = 'lines',
line = list(color = 'rgb(118, 134)', width = 3, dash = 'dot'))  %>%
add_trace(y = ~multiple_line_data$attendrxq, name = 'RXQ', line = list(color = 'blue', width = 3, dash = 'solid'))%>%  ##Plot a second line in NHS blue
layout(title = 'Time Series Line Chart',                 ##set titles and axis labels
xaxis = list (title = "Year"),
yaxis = list (title ="Attendances", range = c(0, max(multiple_line_data$attend_rth) * 1.1))) %>%  #Align the y axis scales with the ggplot chart
config(modeBarButtonsToRemove = c("zoomIn2d", "zoomOut2d", "select2d", "lasso2d", "toImage",   ##remove any unnecessary functions of plotly chart
"pan2d", "autoScale2d", "resetScale2d", "zoom2d"))
library(NHSRplotthedots)
library(NHSRdatasets)
library(tidyverse)
sub_set <- ae_attendances %>%
filter(org_code == "RQM", type == 1, period < as.Date("2018-04-01"))
sub_set %>%
ptd_spc(value_field = breaches, date_field = period, improvement_direction = "decrease")
library(NHSRplotthedots)
library(NHSRdatasets)
library(tidyverse)
sub_set <- ae_attendances %>%
filter(org_code == "RQM", type == 1, period < as.Date("2018-04-01"))
sub_set %>%
ptd_spc(value_field = breaches, date_field = period, improvement_direction = "decrease")
View(sub_set)
library(NHSRplotthedots)
library(NHSRdatasets)
library(tidyverse)
sub_set <- ae_attendances %>%
filter(org_code == "RQM", type == 1, period < as.Date("2018-04-01"))
spc_ggplot <- sub_set %>%
ptd_spc(value_field = breaches, date_field = period, improvement_direction = "decrease")
spc_ggplot
ggplotly(spc_ggplot)
spc_plotly <- spc_ggplot + theme(text = element_text(size = 16), #This makes the basic text size 16 (important for titles above charts)
axis.text = element_text(size = 13), #Makes the axes text size 13
axis.title = element_text(size = 15)) + #Makes the axes titles size 15
ggtitle("Pre-Term Births (%) - Monthly SPC Charts - NENC Trusts") #Update the title of the chart
library(NHSRplotthedots)
library(NHSRdatasets)
library(tidyverse)
sub_set <- ae_attendances %>%
filter(org_code == "RQM", type == 1, period < as.Date("2018-04-01"))
sub_set %>%
ptd_spc(value_field = breaches, date_field = period, improvement_direction = "decrease")
